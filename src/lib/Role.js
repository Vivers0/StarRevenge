const { Command } = require("discord-akairo");
const { MessageEmbed } = require("discord.js")

class Role extends Command {
    constructor() {
        super('role', {
          aliases: ["r", "role", "—Ä–æ–ª—å"]
        });

       this.list = {};
       this.arrayWithRole = [];
       this.lib = {};
    }

    exec(message) {
      try {
        if (message.channel.id !== process.env.GET) return;
        let nickname = message.member.nickname;
        if (!nickname) return message.channel.send("–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —Ä–æ–ª–∏ –≤ –Ω–∏–∫–µ!")
        let nick = nickname.split(" ");

        message.channel.bulkDelete(1)
        message.channel.send(new MessageEmbed().setAuthor("–û–∂–∏–¥–∞–π—Ç–µ!").setColor("GREEN").setTimestamp()).then(msg => msg.delete({ timeout: 3000 }));
        this.getRoleArray(nick, message)
        
        let embed = new MessageEmbed()
          .setAuthor("–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–æ–ª—å")
          .setThumbnail(message.author.avatarURL)
          .addField("–ê–∫–∫–∞—É–Ω—Ç:", "<@" + message.author.id + ">", true)
          .addField("–ù–∏–∫:", message.author.username, true)
          .addField("–†–æ–ª—å:", this.lib[message.author.id].role.map(item => "<@&"+item+">"), true)
          .addField("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å –∫–∞–Ω–∞–ª–∞", `<#${message.channel.id}>`)
          .addField("–ö–æ–º–∞–Ω–¥—ã:", `–í—ã–¥–∞—Ç—å —Ä–æ–ª—å - [‚úÖ]\n–û—Ç–∫–∞–∑–∞—Ç—å - [üõë]\n–£–¥–∞–ª–∏—Ç—å - [üá©]`, true)
          .setColor("GREEN")
          .setFooter("The Star Revenge")
          .setTimestamp();

      this.client.channels.cache.get(process.env.SET).send(embed)
      .then(async msg => {
        await msg.react("‚úÖ");
        await msg.react("‚ùå");
        await msg.react("üá©");
        this.list[msg.id] = {
            author: message.author.id,
            userID: msg.author.id,
            channel: msg.channel,
            channelID: msg.channel.id,
            msg_: msg,
            msg_id: msg.id,
            get: message.channel,
            getID: message.channel.id
        }}).catch(err => console.log(err));
        
        

        message.client.on("messageReactionAdd", (reaction, user) => {
            try {
           this.getEmojiName(reaction, user)
            } catch(e) {
                console.log(e)
            }
          })
        } catch(e) {
          console.log(e)
        }
    }

    async getEmojiName(reaction, user) {
        const emoji = reaction.emoji.name;
        const msg_id = reaction.message.id;
        

        if(!this.list[msg_id] || user.bot) return;
        
        if(emoji === "‚úÖ"){
          const member = reaction.message.guild.members.cache.find(u => u.id === this.list[msg_id].author);
          await member.roles.add(this.lib[member.id].role)
      
          this.list[msg_id].channel.send(new MessageEmbed().setAuthor("–£—Å–ø–µ—à–Ω–æ!").setDescription(`[ACCEPT] ${user} –æ–¥–æ–±—Ä–∏–ª –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${member} | ID: ${member.id}`).setColor("GREEN").setTimestamp().setFooter("The Star Revenge"));
          this.list[msg_id].msg_.delete({ timeout: 0 });
          this.list[msg_id].get.send(new MessageEmbed().setAuthor("–£—Å–ø–µ—à–Ω–æ!").setDescription(`[ACCEPT] ${user} –æ–¥–æ–±—Ä–∏–ª –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${member} | ID: ${member.id}`).setColor("GREEN").setTimestamp().setFooter("The Star Revenge"));
          delete this.list[msg_id];
        }

        if(emoji == "‚ùå"){
          const member = reaction.message.guild.members.cache.find(u => u.id === this.list[msg_id].author);
          this.client.channels.cache.get(this.list[msg_id].channelID).send(new MessageEmbed().setAuthor("–û—Ç–º–µ–Ω–∞!").setDescription(`[REFUSAL] ${user} –æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${member} | ID: ${member.id}`).setColor("RED").setTimestamp().setFooter("The Star Revenge"));
          this.list[msg_id].msg_.delete({ timeout: 0 });
          this.client.channels.cache.get(this.list[msg_id].getID).send(new MessageEmbed().setAuthor("–û—Ç–º–µ–Ω–∞!").setDescription(`[REFUSAL] ${user} –æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${member} | ID: ${member.id}`).setColor("RED").setTimestamp().setFooter("The Star Revenge"))
          delete this.list[msg_id];
        }

        if(emoji == "üá©"){
          this.list[msg_id].msg_.delete({ timeout: 0 });
          delete this.list[msg_id]
        }
    }


    getRoleArray(nick, message) {
        var arrayWithRole = []
        if (nick.includes("RCT") ||
        nick.includes("PVT") ||
        nick.includes("PFC") ||
        nick.includes("SPC") ||
        nick.includes("CPL")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "–†—è–¥–æ–≤–æ–π —Å–æ—Å—Ç–∞–≤").id)
    }
    if (nick.includes("SGT") ||
        nick.includes("SGM")) {
        arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "–°–µ—Ä–∂–∞–Ω—Ç—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤").id)
    }
    if (nick.includes("WO1") ||
        nick.includes("WO2") ||
        nick.includes("WO3")) {
        arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "–£–æ—Ä—Ä–µ–Ω—Ç-–æ—Ñ–∏—Ü–µ—Ä—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤").id)
    }
    if (nick.includes("LT1") ||
        nick.includes("LT2")) {
        arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "–û—Ñ–∏—Ü–µ—Ä—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤").id)
    }
    if (nick.includes("CPT") ||
        nick.includes("MAJ") ||
        nick.includes("CC")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "–°—Ç–∞—Ä—à–∏–π –æ—Ñ–∏—Ü–µ—Ä—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤").id)
    }
    if (nick.includes("CT")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "–ö–ª–æ–Ω –°–æ–ª–¥–∞—Ç").id)
    }
    if (nick.includes("104th")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "104-–π –ë–∞—Ç–∞–ª—å–æ–Ω –ü–æ–¥–¥–µ—Ä–∂–∫–∏").id)
    }
    if (nick.includes("212th")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "212-—ã–π –®—Ç—É—Ä–º–æ–≤–æ–π –ë–∞—Ç–∞–ª—å–æ–Ω").id)
    }
    if (nick.includes("501th")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "501-—ã–π –ª–µ–≥–∏–æ–Ω").id)
    }
    if (nick.includes("21st")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "21-–π –ú–µ–∂–≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ö–æ—Ä–ø—É—Å").id)
    }
    if (nick.includes("Assasins")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "–ö–ª–æ–Ω –ê—Å—Å–∞—Å–∏–Ω").id)
    }
    if (nick.includes("Sectorial")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "–°–µ–∫—Ç–æ—Ä–∏–∞–ª—å–Ω–æ–µ –ö–æ–º–∞–Ω–¥–æ–≤–∞–Ω–∏–µ").id)
    }
    if (nick.includes("DOOM")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "–†–æ—Ç–∞ DOOM").id)
    }
    if (nick.includes("Jedi")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "–î–∂–µ–¥–∞–∏").id)
    }
    if (nick.includes("RC")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "Republic Commando").id)
    }
    if (nick.includes("Guard")) {
      arrayWithRole.push(message.guild.roles.cache.find(r => r.name === "–ì–≤–∞—Ä–¥–∏—è").id)
    }

        this.lib[message.author.id] = {
            role: arrayWithRole
        }
    }
}

module.exports = Role;